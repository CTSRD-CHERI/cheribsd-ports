- Allow setting cf_time (reproducible builds)
- ?
- ?

--- Configure.orig	2020-12-26 15:27:04 UTC
+++ Configure
@@ -1198,6 +1198,7 @@ d_nv_preserves_uv=''
 perladmin=''
 perlpath=''
 d_nv_preserves_uv=''
+d_nv_preserves_uvint=''
 d_nv_zero_is_allbits_zero=''
 i16size=''
 i16type=''
@@ -1207,10 +1208,13 @@ i8type=''
 i64type=''
 i8size=''
 i8type=''
+ivintsize=''
+ivinttype=''
 ivsize=''
 ivtype=''
 nv_overflows_integers_at=''
 nv_preserves_uv_bits=''
+nv_preserves_uvint_bits=''
 nvsize=''
 nvtype=''
 u16size=''
@@ -1221,9 +1225,12 @@ u8type=''
 u64type=''
 u8size=''
 u8type=''
+uvintsize=''
+uvinttype=''
 uvsize=''
 uvtype=''
 ivdformat=''
+ivintdformat=''
 nvEUformat=''
 nvFUformat=''
 nvGUformat=''
@@ -1231,6 +1238,10 @@ uvXUformat=''
 nvfformat=''
 nvgformat=''
 uvXUformat=''
+uvintXUformat=''
+uvintoformat=''
+uvintuformat=''
+uvintxformat=''
 uvoformat=''
 uvuformat=''
 uvxformat=''
@@ -1240,6 +1251,7 @@ privlibexp=''
 installprivlib=''
 privlib=''
 privlibexp=''
+ptraddrsize=''
 ptrsize=''
 d_PRIXU64=''
 d_PRId64=''
@@ -3111,7 +3123,7 @@ $to \$exe
 exe=\$1
 shift
 $to \$exe
-$targetrun -p $targetport -l $targetuser $targethost "cd \$cwd && \$env \$exe \$@"
+$targetrun -p $targetport -l $targetuser $targetsshflags $targethost "cd \$cwd && \$env \$exe \$@"
 EOF
 	    ;;
 	adb)
@@ -3125,7 +3137,7 @@ EOF
 	*/Cross/mkdir)
 	    cat >$targetmkdir <<EOF
 #!/bin/sh
-$targetrun -p $targetport -l $targetuser $targethost "mkdir -p \$@"
+$targetrun -p $targetport -l $targetuser $targetsshflags $targethost "mkdir -p \$@"
 EOF
 	    $chmod a+rx $targetmkdir
 	    ;;
@@ -3142,11 +3154,11 @@ do
   case "\$f" in
   /*)
     $targetmkdir \`dirname \$f\`
-    $targetto -P $targetport -r $q \$f $targetuser@$targethost:\$f           2>/dev/null  || exit 1
+    $targetto -P $targetport -r $q $targetsshflags \$f $targetuser@$targethost:\$f           2>/dev/null  || exit 1
     ;;
   *)
     $targetmkdir $targetdir/\`dirname \$f\`
-    $targetto -P $targetport -r $q \$f $targetuser@$targethost:$targetdir/\$f 2>/dev/null || exit 1
+    $targetto -P $targetport -r $q $targetsshflags \$f $targetuser@$targethost:$targetdir/\$f 2>/dev/null || exit 1
     ;;
   esac
 done
@@ -3182,7 +3194,7 @@ do
 for f in \$@
 do
   $rm -f \$f
-  $targetfrom -P $targetport $q $targetuser@$targethost:$targetdir/\$f . || exit 1
+  $targetfrom -P $targetport $q $targetsshflags $targetuser@$targethost:$targetdir/\$f . || exit 1
 done
 exit 0
 EOF
@@ -3876,7 +3888,10 @@ esac
 . ./posthint.sh
 
 : who configured the system
-cf_time=`LC_ALL=C; LANGUAGE=C; export LC_ALL; export LANGUAGE; $date 2>&1`
+case "$cf_time" in
+"")
+	cf_time=`LC_ALL=C; LANGUAGE=C; export LC_ALL; export LANGUAGE; $date 2>&1` ;;
+esac
 case "$cf_by" in
 "")
 	cf_by=`(logname) 2>/dev/null`
@@ -5061,7 +5076,7 @@ do
 : Now check and see which directories actually exist, avoiding duplicates
 for xxx in $dlist
 do
-    if $test -d $xxx; then
+    if $test -d $xxx || [ $xxx = $prefix/lib ]; then
 		case " $libpth " in
 		*" $xxx "*) ;;
 		*) libpth="$libpth $xxx";;
@@ -7134,7 +7149,7 @@ case "$targetarch" in
 esac
 case "$targetarch" in
 '') ;;
-*)  archname=`echo $targetarch|sed 's,^[^-]*-,,'` ;;
+*)  archname="$targetarch";;
 esac
 myarchname="$tarch"
 case "$archname" in
@@ -7786,13 +7801,58 @@ $rm_try
 	;;
 esac
 $rm_try
+echo " "
+case "$ptraddrsize" in
+'')
+	echo "Checking to see how big your addresses are..." >&4
+	$cat >try.c <<EOCP
+#include <stddef.h>
+#include <stdio.h>
+#$i_stdlib I_STDLIB
+#ifdef I_STDLIB
+#include <stdlib.h>
+#endif
+int main()
+{
+#ifdef _PTRADDR_T
+    printf("%d\n", (int)sizeof(ptraddr_t));
+#else
+    printf("%d\n", (int)sizeof(void *));
+#endif
+    exit(0);
+}
+EOCP
+	set try
+	if eval $compile_ok; then
+		ptraddrsize=`$run ./try`
+		echo "Your addresses are $ptraddrsize bytes long."
+	else
+		dflt="$ptrsize"
+		echo "(I can't seem to compile the test program.  Guessing...)" >&4
+		rp="What is the size of an address (in bytes)?"
+		. ./myread
+		ptraddrsize="$ans"
+	fi
+	;;
+esac
+$rm_try
+if test $ptraddrsize -gt $ptrsize; then
+	cat <<EOM >&4
+*** Your addresses are $ptraddrsize bytes long,
+*** but your pointers are only $ptrsize bytes long.
+*** Cannot continue, aborting.
+
+EOM
+
+	exit 1
+fi
 case "$use64bitall" in
 "$define"|true|[yY]*)
-	case "$ptrsize" in
+	case "$ptraddrsize" in
 	4)	cat <<EOM >&4
 
 *** You have chosen a maximally 64-bit build,
-*** but your pointers are only 4 bytes wide.
+*** but your addresses are only 4 bytes wide.
 *** Please rerun Configure without -Duse64bitall.
 EOM
 		case "$d_quad" in
@@ -9605,8 +9665,7 @@ case "$sitescript" in
 
 : determine where add-on public executable scripts go
 case "$sitescript" in
-'')	dflt=$siteprefix/script
-	$test -d $dflt || dflt=$sitebin ;;
+'')	dflt=$sitebin ;;
 *)  dflt="$sitescript" ;;
 esac
 fn=d~+
@@ -16486,18 +16545,31 @@ define:define:?*)
 
 case "$use64bitint:$d_quad:$quadtype" in
 define:define:?*)
-	ivtype="$quadtype"
-	uvtype="$uquadtype"
-	ivsize=8
-	uvsize=8
+	ivinttype="$quadtype"
+	uvinttype="$uquadtype"
+	ivintsize=8
+	uvintsize=8
 	;;
-*)	ivtype="long"
-	uvtype="unsigned long"
-	ivsize=$longsize
-	uvsize=$longsize
+*)
+	ivinttype="long"
+	uvinttype="unsigned long"
+	ivintsize=$longsize
+	uvintsize=$longsize
 	;;
 esac
 
+if $test X"$ptrsize" != X"$ptraddrsize"; then
+	ivtype="intptr_t"
+	uvtype="uintptr_t"
+	ivsize=$ptrsize
+	uvsize=$ptrsize
+else
+	ivtype="$ivinttype"
+	uvtype="$uvinttype"
+	ivsize="$ivintsize"
+	uvsize="$uvintsize"
+fi
+
 case "$uselongdouble:$d_longdbl" in
 define:define)
 	nvtype="long double"
@@ -16552,6 +16624,8 @@ $echo "(UV will be "$uvtype", $uvsize bytes)"
 
 $echo "(IV will be "$ivtype", $ivsize bytes)"
 $echo "(UV will be "$uvtype", $uvsize bytes)"
+$echo "(IVINT will be "$ivinttype", $ivintsize bytes)"
+$echo "(UVINT will be "$uvinttype", $uvintsize bytes)"
 $echo "(NV will be "$nvtype", $nvsize bytes)"
 
 $cat >try.c <<EOCP
@@ -16672,7 +16746,7 @@ esac
 	;;
 esac
 
-$echo "Checking how many bits of your UVs your NVs can preserve..." >&4
+$echo "Checking how many bits of your UVINTs your NVs can preserve..." >&4
 $cat <<EOP >try.c
 #include <stdio.h>
 #$i_stdlib I_STDLIB
@@ -16687,23 +16761,23 @@ int main() {
 $signal_t blech(int s) { bletched = 1; }
 #endif
 int main() {
-    $uvtype u = 0;
+    $uvinttype u = 0;
     $nvtype d;
-    int     n = 8 * $uvsize;
+    int     n = 8 * $uvintsize;
     int     i;
 #ifdef SIGFPE
     signal(SIGFPE, blech);
 #endif
 
     for (i = 0; i < n; i++) {
-      u = u << 1 | ($uvtype)1;
+      u = u << 1 | ($uvinttype)1;
       d = ($nvtype)u;
-      if (($uvtype)d != u)
+      if (($uvinttype)d != u)
         break;
       if (d <= 0)
 	break;
       d = ($nvtype)(u - 1);
-      if (($uvtype)d != (u - 1))
+      if (($uvinttype)d != (u - 1))
         break;
 #ifdef SIGFPE
       if (bletched)
@@ -16716,23 +16790,30 @@ set try
 EOP
 set try
 
-d_nv_preserves_uv="$undef"
+d_nv_preserves_uvint="$undef"
 if eval $compile; then
-	nv_preserves_uv_bits="`$run ./try`"
+	nv_preserves_uvint_bits="`$run ./try`"
 fi
-case "$nv_preserves_uv_bits" in
+case "$nv_preserves_uvint_bits" in
 \-[1-9]*)
-	nv_preserves_uv_bits=`expr 0 - $nv_preserves_uv_bits`
-	$echo "Your NVs can preserve all $nv_preserves_uv_bits bits of your UVs."  2>&1
-	d_nv_preserves_uv="$define"
+	nv_preserves_uvint_bits=`expr 0 - $nv_preserves_uvint_bits`
+	$echo "Your NVs can preserve all $nv_preserves_uvint_bits bits of your UVINTs."  2>&1
+	d_nv_preserves_uvint="$define"
 	;;
-[1-9]*)	$echo "Your NVs can preserve only $nv_preserves_uv_bits bits of your UVs."  2>&1
-	d_nv_preserves_uv="$undef" ;;
+[1-9]*)	$echo "Your NVs can preserve only $nv_preserves_uvint_bits bits of your UVINTs."  2>&1
+	d_nv_preserves_uvint="$undef" ;;
 *)	$echo "Can't figure out how many bits your NVs preserve." 2>&1
-	nv_preserves_uv_bits="0" ;;
+	nv_preserves_uvint_bits="0" ;;
 esac
 $rm_try
 
+if $test X"$ptrsize" != X"$ptraddrsize"; then
+	d_nv_preserves_uv="$undef"
+else
+	d_nv_preserves_uv="$d_nv_preserves_uvint"
+fi
+nv_preserves_uv_bits="$nv_preserves_uvint_bits"
+
 $echo "Checking to find the largest integer value your NVs can hold..." >&4
 $cat <<EOP >try.c
 #include <stdio.h>
@@ -19659,7 +19740,7 @@ esac
 ''|[nN]*) multiarch="$undef" ;;
 esac
 
-: check for ordering of bytes in a UV
+: check for ordering of bytes in a UVINT
 echo " "
 case "$multiarch" in
 *$define*)
@@ -19689,20 +19770,20 @@ EOM
 #include <stdlib.h>
 #endif
 #include <sys/types.h>
-typedef $uvtype UV;
+typedef $uvinttype UVINT;
 int main()
 {
 	int i;
 	union {
-		UV l;
-		char c[$uvsize];
+		UVINT l;
+		char c[$uvintsize];
 	} u;
 
-	if ($uvsize > 4)
-		u.l = (((UV)0x08070605) << 32) | (UV)0x04030201;
+	if ($uvintsize > 4)
+		u.l = (((UVINT)0x08070605) << 32) | (UVINT)0x04030201;
 	else
-		u.l = (UV)0x04030201;
-	for (i = 0; i < $uvsize; i++)
+		u.l = (UVINT)0x04030201;
+	for (i = 0; i < $uvintsize; i++)
 		printf("%c", u.c[i]+'0');
 	printf("\n");
 	exit(0);
@@ -19729,7 +19810,7 @@ EOM
 		fi
 		case "$xxx_prompt" in
 		y)
-			rp="What is the order of bytes in $uvtype?"
+			rp="What is the order of bytes in $uvinttype?"
 			. ./myread
 			byteorder="$ans"
 			;;
@@ -21287,38 +21368,51 @@ $echo "Checking the format strings to be used for Perl
 echo " "
 $echo "Checking the format strings to be used for Perl's internal types..." >&4
 
-if $test X"$ivsize" = X8; then
-	ivdformat="$sPRId64"
-	uvuformat="$sPRIu64"
-	uvoformat="$sPRIo64"
-	uvxformat="$sPRIx64"
-	uvXUformat="$sPRIXU64"
+if $test X"$ivintsize" = X8; then
+	ivintdformat="$sPRId64"
+	uvintuformat="$sPRIu64"
+	uvintoformat="$sPRIo64"
+	uvintxformat="$sPRIx64"
+	uvintXUformat="$sPRIXU64"
 else
-	if $test X"$ivsize" = X"$longsize"; then
-		ivdformat='"ld"'
-		uvuformat='"lu"'
-		uvoformat='"lo"'
-		uvxformat='"lx"'
-		uvXUformat='"lX"'
+	if $test X"$ivintsize" = X"$longsize"; then
+		ivintdformat='"ld"'
+		uvintuformat='"lu"'
+		uvintoformat='"lo"'
+		uvintxformat='"lx"'
+		uvintXUformat='"lX"'
 	else
-		if $test X"$ivsize" = X"$intsize"; then
-			ivdformat='"d"'
-			uvuformat='"u"'
-			uvoformat='"o"'
-			uvxformat='"x"'
-			uvXUformat='"X"'
+		if $test X"$ivintsize" = X"$intsize"; then
+			ivintdformat='"d"'
+			uvintuformat='"u"'
+			uvintoformat='"o"'
+			uvintxformat='"x"'
+			uvintXUformat='"X"'
 		else
 			: far out
-			if $test X"$ivsize" = X"$shortsize"; then
-				ivdformat='"hd"'
-				uvuformat='"hu"'
-				uvoformat='"ho"'
-				uvxformat='"hx"'
-				uvXUformat='"hX"'
+			if $test X"$ivintsize" = X"$shortsize"; then
+				ivintdformat='"hd"'
+				uvintuformat='"hu"'
+				uvintoformat='"ho"'
+				uvintxformat='"hx"'
+				uvintXUformat='"hX"'
 			fi
 		fi
 	fi
 fi
+if $test X"$ivsize" != X"$ivintsize"; then
+	ivdformat='"Pd"'
+	uvuformat='"Pu"'
+	uvoformat='"Po"'
+	uvxformat='"Px"'
+	uvXUformat='"PX"'
+else
+	ivdformat="$ivintdformat"
+	uvuformat="$uvintuformat"
+	uvoformat="$uvintoformat"
+	uvxformat="$uvintxformat"
+	uvXUformat="$uvintXUformat"
+fi
 
 if $test X"$usequadmath" = X"$define"; then
     nveformat='"Qe"'
@@ -21931,7 +22025,7 @@ case "$selectminbits" in
 
 : check for the select 'width'
 case "$selectminbits" in
-'') safebits=`expr $ptrsize \* 8`
+'') safebits=`expr $ptraddrsize \* 8`
     case "$d_select" in
 	$define)
 		$cat <<EOM
@@ -24395,6 +24489,7 @@ d_nv_preserves_uv='$d_nv_preserves_uv'
 d_nice='$d_nice'
 d_nl_langinfo='$d_nl_langinfo'
 d_nv_preserves_uv='$d_nv_preserves_uv'
+d_nv_preserves_uvint='$d_nv_preserves_uvint'
 d_nv_zero_is_allbits_zero='$d_nv_zero_is_allbits_zero'
 d_off64_t='$d_off64_t'
 d_old_pthread_create_joinable='$d_old_pthread_create_joinable'
@@ -24843,6 +24938,9 @@ ivdformat='$ivdformat'
 intsize='$intsize'
 issymlink='$issymlink'
 ivdformat='$ivdformat'
+ivintdformat='$ivintdformat'
+ivintsize='$ivintsize'
+ivinttype='$ivinttype'
 ivsize='$ivsize'
 ivtype='$ivtype'
 known_extensions='$known_extensions'
@@ -24926,6 +25024,7 @@ nv_preserves_uv_bits='$nv_preserves_uv_bits'
 nvGUformat='$nvGUformat'
 nv_overflows_integers_at='$nv_overflows_integers_at'
 nv_preserves_uv_bits='$nv_preserves_uv_bits'
+nv_preserves_uvint_bits='$nv_preserves_uvint_bits'
 nveformat='$nveformat'
 nvfformat='$nvfformat'
 nvgformat='$nvgformat'
@@ -24963,6 +25062,7 @@ procselfexe='$procselfexe'
 privlib='$privlib'
 privlibexp='$privlibexp'
 procselfexe='$procselfexe'
+ptraddrsize='$ptraddrsize'
 ptrsize='$ptrsize'
 quadkind='$quadkind'
 quadtype='$quadtype'
@@ -25149,6 +25249,12 @@ uvXUformat='$uvXUformat'
 usrinc='$usrinc'
 uuname='$uuname'
 uvXUformat='$uvXUformat'
+uvintXUformat='$uvintXUformat'
+uvintoformat='$uvintoformat'
+uvintsize='$uvintsize'
+uvinttype='$uvinttype'
+uvintuformat='$uvintuformat'
+uvintxformat='$uvintxformat'
 uvoformat='$uvoformat'
 uvsize='$uvsize'
 uvtype='$uvtype'
