diff --git CMakeLists.txt CMakeLists.txt
index 21a763216..97517f0fc 100644
--- CMakeLists.txt
+++ CMakeLists.txt
@@ -77,7 +77,7 @@ set_package_properties(KF5Baloo PROPERTIES DESCRIPTION "File Searching"
                       )
 
 find_package(PkgConfig REQUIRED)
-pkg_check_modules(QALCULATE libqalculate>2.0 REQUIRED IMPORTED_TARGET)
+pkg_check_modules(QALCULATE libqalculate>2.0 IMPORTED_TARGET)
 
 find_package(KWinDBusInterface CONFIG REQUIRED)
 
diff --git startkde/startplasma.cpp startkde/startplasma.cpp
index b0158c97d..479f30554 100644
--- startkde/startplasma.cpp
+++ startkde/startplasma.cpp
@@ -350,6 +350,20 @@ void setupPlasmaEnvironment()
     QDir().mkpath(extraConfigDir);
     qputenv("XDG_CONFIG_DIRS", QFile::encodeName(extraConfigDir) + ':' + currentConfigDirs);
 
+    // Wayland sockets live in XDG_RUNTIME_DIR so make sure it's set. Other
+    // uses, including X applications, should have fallbacks, but can still
+    // benefit from it, and Qt will warn when it's not set.
+    if (!qEnvironmentVariableIsSet("XDG_RUNTIME_DIR")) {
+        const auto runtimeDir = QStandardPaths::writableLocation(QStandardPaths::RuntimeLocation).toUtf8();
+        qputenv("XDG_RUNTIME_DIR", runtimeDir);
+    }
+
+#ifdef __CHERI_PURE_CAPABILITY__
+    if (!qEnvironmentVariableIsSet("XDG_DATA_DIRS")) {
+        qputenv("XDG_DATA_DIRS", "/usr/local/share:/usr/local64/share:/usr/share");
+    }
+#endif
+
     const KConfig globals;
     const QString currentLnf = KConfigGroup(&globals, QStringLiteral("KDE")).readEntry("LookAndFeelPackage", QStringLiteral("org.kde.breeze.desktop"));
     QFile activeLnf(extraConfigDir + QLatin1String("/package"));
