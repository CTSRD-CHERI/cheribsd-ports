diff --git atk-adaptor/adaptors/collection-adaptor.c atk-adaptor/adaptors/collection-adaptor.c
index 8cd99304..df65c0c5 100644
--- atk-adaptor/adaptors/collection-adaptor.c
+++ atk-adaptor/adaptors/collection-adaptor.c
@@ -23,6 +23,7 @@
 /* collection.c: implements the Collection interface */
 
 #include <string.h>
+#include <strings.h>
 
 #include "bridge.h"
 #include <atk/atk.h>
diff --git atk-adaptor/bridge.c atk-adaptor/bridge.c
index a2b1de83..6719b694 100644
--- atk-adaptor/bridge.c
+++ atk-adaptor/bridge.c
@@ -30,6 +30,7 @@
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
+#include <strings.h>
 #include <sys/stat.h>
 #include <unistd.h>
 
diff --git atk/atk-enum-types.c.template atk/atk-enum-types.c.template
index dc2cae9f..cbf4bdab 100644
--- atk/atk-enum-types.c.template
+++ atk/atk-enum-types.c.template
@@ -15,9 +15,9 @@
 GType
 @enum_name@_get_type (void)
 {
-  static gsize g_define_type_id__volatile;
+  static GType g_define_type_id__volatile;
 
-  if (g_once_init_enter (&g_define_type_id__volatile))
+  if (g_once_init_enter_pointer (&g_define_type_id__volatile))
     {
       static const G@Type@Value values[] = {
 /*** END value-header ***/
@@ -31,7 +31,7 @@ GType
       };
       GType g_define_type_id =
         g_@type@_register_static (g_intern_static_string ("@EnumName@"), values);
-      g_once_init_leave (&g_define_type_id__volatile, g_define_type_id);
+      g_once_init_leave_pointer (&g_define_type_id__volatile, g_define_type_id);
     }
   return g_define_type_id__volatile;
 }
diff --git atk/atkutil.h atk/atkutil.h
index 844fe2a1..04704408 100644
--- atk/atkutil.h
+++ atk/atkutil.h
@@ -329,8 +329,8 @@ const gchar *atk_get_version (void);
   GType                                                                                    \
       type_name##_get_type (void)                                                          \
   {                                                                                        \
-    static volatile gsize g_define_type_id__volatile = 0;                                  \
-    if (g_once_init_enter (&g_define_type_id__volatile))                                   \
+    static volatile GType g_define_type_id__volatile = 0;                                  \
+    if (g_once_init_enter_pointer (&g_define_type_id__volatile))                           \
       {                                                                                    \
         AtkObjectFactory *factory;                                                         \
         GType derived_type;                                                                \
@@ -354,12 +354,12 @@ const gchar *atk_get_version (void);
                                            (GInstanceInitFunc) type_name##_init,           \
                                            (GTypeFlags) flags);                            \
         { /* custom code follows */
-#define _ATK_DEFINE_TYPE_EXTENDED_END()                              \
-  /* following custom code */                                        \
-  }                                                                  \
-  g_once_init_leave (&g_define_type_id__volatile, g_define_type_id); \
-  }                                                                  \
-  return g_define_type_id__volatile;                                 \
+#define _ATK_DEFINE_TYPE_EXTENDED_END()                                      \
+  /* following custom code */                                                \
+  }                                                                          \
+  g_once_init_leave_pointer (&g_define_type_id__volatile, g_define_type_id); \
+  }                                                                          \
+  return g_define_type_id__volatile;                                         \
   } /* closes type_name##_get_type() */
 
 G_END_DECLS
diff --git meson.build meson.build
index aff697b3..5fc6e457 100644
--- meson.build
+++ meson.build
@@ -8,7 +8,7 @@ project('at-spi2-core', 'c',
         ],
         meson_version: '>= 0.63.0')
 
-add_project_arguments([ '-D_POSIX_C_SOURCE=200809L', '-D_DEFAULT_SOURCE' ], language: 'c')
+add_project_arguments([ '-D_XOPEN_SOURCE=700', '-D_DEFAULT_SOURCE' ], language: 'c')
 
 fs = import('fs')
 
